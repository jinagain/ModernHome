<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.modernhome.mapper.releaseMapper">

	<resultMap id="WorkInstrVO" type="WorkInstrVO">
		<id property="work_id" column="work_id" />
		<result property="work_num" column="work_num" />
		<result property="reg_date" column="reg_date" />
	</resultMap>
	<resultMap id="MaterialVO" type="MaterialVO">
		<id property="ma_id" column="ma_id" />
		<result property="ma_name" column="ma_name" />
	</resultMap>
	<resultMap id="MaterialStockVO" type="MaterialStockVO">
		<result property="ma_id" column="ma_id" />
		<result property="ms_cnt" column="ms_cnt" />
	</resultMap>
	<resultMap id="WarehouseVO" type="WarehouseVO">
		<id property="wh_id" column="wh_id" />
		<result property="wh_name" column="wh_name" />
	</resultMap>
	<resultMap type="EmployeeVO" id="EmployeeVO">
		<result property="emp_name" column="emp_name" />
	</resultMap>
	<resultMap type="OutOrderVO" id="OutOrderVO">
		<id property="oo_id" column="oo_id" />
		<result property="oo_num" column="oo_num" />
		<result property="oo_end_date" column="oo_end_date" />
	</resultMap>
	<resultMap type="ClientVO" id="ClientVO">
		<id property="clt_id" column="clt_id" />
		<result property="clt_name" column="clt_name" />
	</resultMap>
	<resultMap type="ProductVO" id="ProductVO">
		<id property="pro_id" column="pro_id" />
		<result property="pro_name" column="pro_name" />
	</resultMap>
	<resultMap type="ProductStockVO" id="ProductStockVO">
		<result property="pro_id" column="pro_id" />
		<result property="ps_cnt" column="ps_cnt" />
	</resultMap>


	<resultMap type="MaterialReleaseVO" id="MaterialReleaseVO">
		<id property="mr_id" column="mr_id" />
		<result property="mr_num" column="mr_num" />
		<result property="ma_id" column="ma_id" />
		<result property="work_id" column="work_id" />
		<result property="wh_id" column="wh_id" />
		<result property="mr_cnt" column="mr_cnt" />
		<result property="mr_date" column="mr_date" />
		<result property="mr_state" column="mr_state" />
		<result property="emp_id" column="emp_id" />
		<collection property="materialVO" resultMap="MaterialVO" />
		<collection property="materialStockVO"
			resultMap="MaterialStockVO" />
		<collection property="warehouseVO" resultMap="WarehouseVO" />
		<collection property="employeeVO" resultMap="EmployeeVO" />
		<collection property="workInstrVO" resultMap="WorkInstrVO" />

	</resultMap>

	<!-- 자재 출고 목록 (페이징) -->
	<select id="getmrlist" resultMap="MaterialReleaseVO">
		select mr_num, mr.work_id, wi.work_num, m.ma_name, mr_cnt, w.wh_name,
		wi.reg_date, mr_state, mr.emp_id, mr_date, ms.ms_cnt, e.emp_name,
		mr_id, m.ma_id
		from material_release mr
		join work_instr wi on mr.work_id = wi.work_id
		join material m on mr.ma_id = m.ma_id
		join warehouse w on mr.wh_id = w.wh_id
		join material_stock ms on mr.ma_id =
		ms.ma_id
		join employee e on mr.emp_id = e.emp_id
		LIMIT #{startPage},
		#{pageSize}
	</select>

	<!-- 자재 출고 목록 (페이징) -->

	<!-- 전체 글 개수 (페이징) -->
	<select id="mrTotalCnt" resultType="int">
		select count(mr_num)
		from material_release mr
		join work_instr wi on mr.work_id = wi.work_id
		join material m on mr.ma_id = m.ma_id
		join warehouse w on mr.wh_id = w.wh_id
		join material_stock ms on mr.ma_id =
		ms.ma_id
		join employee e on mr.emp_id = e.emp_id
	</select>
	<!-- 전체 글 개수 (페이징) -->

	<!-- 자재 출고 검색 (페이징) -->
	<select id="getmrlistp" resultMap="MaterialReleaseVO"
		parameterType="java.util.Map">
		select mr_num, mr.work_id, wi.work_num, m.ma_name, mr_cnt, w.wh_name,
		wi.reg_date, mr_state, mr.emp_id, mr_date, ms.ms_cnt, e.emp_name,
		mr_id, m.ma_id
		from material_release mr
		join work_instr wi on mr.work_id = wi.work_id
		join material m on mr.ma_id = m.ma_id
		join warehouse w on mr.wh_id = w.wh_id
		join material_stock ms on mr.ma_id =
		ms.ma_id
		join employee e on mr.emp_id = e.emp_id
		<where>
			<if test="mr_num != ''">
				AND mr_num like CONCAT('%', #{mr_num}, '%')
			</if>
			<if test="ma_name != ''">
				AND ma_name like CONCAT('%', #{ma_name}, '%')
			</if>
			<if test="startDate != ''">
				AND mr_date &gt;= #{startDate}
			</if>
			<if test="endDate != ''">
				AND #{endDate} &gt;= mr_date
			</if>
		</where>
		LIMIT #{pageVO.startPage}, #{pageVO.pageSize}
	</select>
	<!-- 자재 출고 검색 (페이징) -->

	<!-- 검색 결과 개수 (페이징) -->
	<select id="mrSearchCnt" resultType="int"
		parameterType="java.util.Map">
		select count(mr_num)
		from material_release mr
		join work_instr wi on mr.work_id = wi.work_id
		join material m on mr.ma_id = m.ma_id
		join warehouse w on mr.wh_id = w.wh_id
		join material_stock ms on mr.ma_id =
		ms.ma_id
		join employee e on mr.emp_id = e.emp_id
		<where>
			<if test="mr_num != ''">
				AND mr_num like CONCAT('%', #{mr_num}, '%')
			</if>
			<if test="ma_name != ''">
				AND ma_name like CONCAT('%', #{ma_name}, '%')
			</if>
			<if test="startDate != ''">
				AND mr_date &gt;= #{startDate}
			</if>
			<if test="endDate != ''">
				AND #{endDate} &gt;= mr_date
			</if>
		</where>
	</select>
	<!-- 검색 결과 개수 (페이징) -->


	<insert id="regmtRelease">
		insert into material_release (mr_num, ma_id, work_id,
		wh_id, mr_cnt, mr_date, mr_state, emp_id)
		SELECT CONCAT("MR",
		LPAD(ifnull(max(mr_id), 0) + 1, 6, '0')), #{ma_id}, #{work_id},
		#{wh_id}, #{mr_cnt}, null, #{mr_state}, #{emp_id}
		FROM material_release
	</insert>

	<!-- 완제품 삭제 -->
	<delete id="delmtRelease">
		delete from material_release
		where mr_id = #{mr_id}
	</delete>
	<!-- 완제품 삭제 -->

	<!-- 완제품 수정 -->
	<update id="updatemtRelease">
		update material_release
		set pro_name = #{pro_name},
		pro_unit = #{pro_unit}, pro_price = #{pro_price}
		where mr_num = #{mr_num}
	</update>
	
	<!-- 자재 출고 팝업 (페이징) -->
	<select id="getWorkInstrInfo" resultMap="MaterialReleaseVO">
		select wi.work_num , m.ma_name , wi.work_cnt * r.req_cnt mr_cnt,
		wi.reg_date, m.ma_id, wi.work_id
		from work_instr wi
		join product p on wi.pro_id = p.pro_id
		join requirement r on p.pro_id = r.pro_id
		join material m on r.ma_id = m.ma_id
		WHERE wi.work_state = '대기'
		AND NOT exists (
			select 1
            from material_release mr
            where wi.work_id = mr.work_id
            and m.ma_id = mr.ma_id
        )
		LIMIT #{startPage}, #{pageSize}
	</select>
	<!-- 자재 출고 팝업 (페이징) -->
	
	<select id="getWorkInstrInfoCnt" resultType="int">
		select count(wi.work_num)
		from work_instr wi
		join product p on wi.pro_id = p.pro_id
		join requirement r on p.pro_id = r.pro_id
		join material m on r.ma_id = m.ma_id
		WHERE wi.work_state = '대기'
		AND NOT exists (
			select 1
            from material_release mr
            where wi.work_id = mr.work_id
            and m.ma_id = mr.ma_id
        )
	</select>
	
	
	<select id="getMaterialStock" resultMap="MaterialReleaseVO">
		select m.ma_name,
		ms.ms_cnt, w.wh_name, w.wh_id
		from material m
		join material_stock ms on m.ma_id = ms.ma_id
		join warehouse w on ms.wh_id = w.wh_id
		where m.ma_id = #{ma_id}
	</select>
	<update id="acceptMR">
		update material_release set mr_state = '출고완료', mr_date=now() where mr_id =
		#{mr_id};
	</update>
	<update id="updateMS" parameterType="java.util.Map">
		update material_stock set ms_cnt=ms_cnt-#{mr_cnt}
		where ma_id = #{ma_id};
	</update>

	<resultMap type="ProductReleaseVO" id="ProductReleaseVO">
		<id property="pr_id" column="pr_id" />
		<result property="pr_num" column="pr_num" />
		<result property="pro_id" column="pro_id" />
		<result property="oo_id" column="oo_id" />
		<result property="wh_id" column="wh_id" />
		<result property="pr_cnt" column="pr_cnt" />
		<result property="pr_date" column="pr_date" />
		<result property="pr_state" column="pr_state" />
		<result property="emp_id" column="emp_id" />
		<collection property="productVO" resultMap="ProductVO" />
		<collection property="productStockVO"
			resultMap="ProductStockVO" />
		<collection property="warehouseVO" resultMap="WarehouseVO" />
		<collection property="employeeVO" resultMap="EmployeeVO" />
		<collection property="outOrderVO" resultMap="OutOrderVO" />
		<collection property="clientVO" resultMap="ClientVO" />
	</resultMap>

	<!-- 완제품 출고 목록 (페이징) -->
	<select id="getprlist" resultMap="ProductReleaseVO">
		select pr_id, pr_num ,
		oo.oo_num, c.clt_name, p.pro_name, pr.pr_cnt, ps.ps_cnt, w.wh_name,
		oo.oo_end_date, pr.pr_state, e.emp_name, pr.pr_date,
		p.pro_id,oo.oo_cnt
		from product_release pr
		join out_order oo on pr.oo_id = oo.oo_id
		join client c on oo.clt_id = c.clt_id
		join product p on pr.pro_id = p.pro_id
		join warehouse w on pr.wh_id = w.wh_id
		join product_stock ps on pr.pro_id =
		ps.pro_id
		join employee e on pr.emp_id = e.emp_id
		order by pr_id desc
		LIMIT
		#{startPage}, #{pageSize}
	</select>
	<!-- 완제품 출고 목록 (페이징) -->

	<!-- 전체 글 개수 (페이징) -->
	<select id="prTotalCnt" resultType="int">
		select count(pr_id)
		from product_release pr
		join out_order oo on pr.oo_id = oo.oo_id
		join client c on oo.clt_id = c.clt_id
		join product p on pr.pro_id = p.pro_id
		join warehouse w on pr.wh_id = w.wh_id
		join product_stock ps on pr.pro_id =
		ps.pro_id
		join employee e on pr.emp_id = e.emp_id
	</select>
	<!-- 전체 글 개수 (페이징) -->

	<!-- 완제품 출고 검색 (페이징) -->
	<select id="getprlistp" resultMap="ProductReleaseVO"
		parameterType="java.util.Map">
		select pr_id, pr_num , oo.oo_num, c.clt_name, p.pro_name, pr.pr_cnt,
		ps.ps_cnt, w.wh_name, oo.oo_end_date, pr.pr_state, e.emp_name,
		pr.pr_date, p.pro_id, oo.oo_cnt
		from product_release pr
		join out_order oo on pr.oo_id = oo.oo_id
		join client c on oo.clt_id = c.clt_id
		join product p on pr.pro_id = p.pro_id
		join warehouse w on pr.wh_id = w.wh_id
		join product_stock ps on pr.pro_id =
		ps.pro_id
		join employee e on pr.emp_id = e.emp_id
		<where>
			<if test="pr_num != ''">
				AND pr_num like CONCAT('%', #{pr_num}, '%')
			</if>
			<if test="pro_name != ''">
				AND p.pro_name like CONCAT('%', #{pro_name}, '%')
			</if>
			<if test="startDate != ''">
				AND pr_date &gt;= #{startDate}
			</if>
			<if test="endDate != ''">
				AND #{endDate} &gt;= pr_date
			</if>
		</where>
		order by pr_id desc
		LIMIT #{pageVO.startPage}, #{pageVO.pageSize}
	</select>
	<!-- 완제품 출고 검색 (페이징) -->

	<!-- 검색 결과 개수 (페이징) -->
	<select id="prSearchCnt" resultType="int"
		parameterType="java.util.Map">
		select count(pr_id)
		from product_release pr
		join out_order oo on pr.oo_id = oo.oo_id
		join client c on oo.clt_id = c.clt_id
		join product p on pr.pro_id = p.pro_id
		join warehouse w on pr.wh_id = w.wh_id
		join product_stock ps on pr.pro_id =
		ps.pro_id
		join employee e on pr.emp_id = e.emp_id
		<where>
			<if test="pr_num != ''">
				AND pr_num like CONCAT('%', #{pr_num}, '%')
			</if>
			<if test="pro_name != ''">
				AND p.pro_name like CONCAT('%', #{pro_name}, '%')
			</if>
			<if test="startDate != ''">
				AND pr_date &gt;= #{startDate}
			</if>
			<if test="endDate != ''">
				AND #{endDate} &gt;= pr_date
			</if>
		</where>
	</select>
	<!-- 검색 결과 개수 (페이징) -->

	<!-- 검색 결과 개수 (팝업페이징) -->
	<select id="prSearchCnt2" resultType="int"
		parameterType="java.util.Map">
		select count(pr_id)
		from product_release pr
		join out_order oo on pr.oo_id = oo.oo_id
		join client c on oo.clt_id = c.clt_id
		join product p on pr.pro_id = p.pro_id
		join warehouse w on pr.wh_id = w.wh_id
		join product_stock ps on pr.pro_id =
		ps.pro_id
		join employee e on pr.emp_id = e.emp_id
	</select>
	<!-- 검색 결과 개수 (페이징) -->

	<!-- 출하 출고 계산 -->
	<select id="shpPrCnt" resultType="int">
		select count(pr_id)
		from product_release
		JOIN out_order o ON product_release.oo_id = o.oo_id
		JOIN client c ON o.clt_id = c.clt_id
		JOIN product p ON product_release.pro_id = p.pro_id
		<where>
		pr_state = '출고완료'
			<if test="pr_num != null and pr_num != ''">
				AND pr_num LIKE CONCAT('%', #{pr_num}, '%')
			</if>
		AND NOT EXISTS (
		SELECT 1
		FROM shipment
		WHERE shipment.pr_id = product_release.pr_id
		)
		</where>
	</select>
	<!-- 출하 출고 계산 -->

	<!-- 출하 출고 리스트(페이징) -->
<select id="shpPrList"
	resultType="com.modernhome.domain.ProductReleaseVO">
	SELECT pr_num, oo_num, clt_name, pro_name, oo_cnt, oo_end_date
	FROM product_release
	JOIN out_order o ON product_release.oo_id = o.oo_id
	JOIN client c ON o.clt_id = c.clt_id
	JOIN product p ON product_release.pro_id = p.pro_id
	<where>
		pr_state = '출고완료'
		<if test="vo.pr_num != null and vo.pr_num != ''">
			AND pr_num LIKE CONCAT('%', #{vo.pr_num}, '%')
		</if>
		AND NOT EXISTS (
		SELECT 1
		FROM shipment
		WHERE shipment.pr_id = product_release.pr_id
		)
	</where>
	ORDER BY pr_id DESC
	LIMIT #{pvo.startPage}, #{pvo.pageSize}
</select>

	<!-- 출하 출고 리스트(페이징) -->


	<insert id="regprRelease">
		insert into product_release (pr_num, pro_id, oo_id,
		wh_id, pr_cnt, pr_date, pr_state, emp_id)
		SELECT CONCAT("PN",
		LPAD(ifnull(max(pr_id), 0) + 1, 6, '0')), #{pro_id}, #{oo_id},
		#{wh_id}, #{pr_cnt}, null, #{pr_state}, #{emp_id}
		FROM product_release
	</insert>

	<update id="updateprRelease">
		update product_release
		set pro_name = #{pro_name},
		pro_unit = #{pro_unit}, pro_price = #{pro_price}
		where pr_num = #{pr_num}
	</update>

	<delete id="delprRelease">
		delete from product_release
		where pr_id = #{pr_id}
	</delete>
	
	<!-- 수주 정보 팝업 (페이징) -->
	<select id="getOutorderinfo" resultMap="ProductReleaseVO">
		select oo.oo_num, c.clt_name, p.pro_name, oo.oo_cnt pr_cnt, oo.oo_end_date,
		p.pro_id, oo.oo_id
		from out_order oo
		join client c on oo.clt_id = c.clt_id
		join product p on oo.pro_id = p.pro_id
		join product_stock ps on p.pro_id = ps.pro_id
		WHERE oo.oo_state = '생산완료'
		and not exists(
			select 1
            from product_release
            where product_release.oo_id = oo.oo_id
        )
		LIMIT #{startPage}, #{pageSize}
	</select>
	<!-- 수주 정보 팝업 (페이징) -->
	
	<select id="getOutorderinfoCnt" resultType="int">
		select count(oo.oo_num)
		from out_order oo
		join client c on oo.clt_id = c.clt_id
		join product p on oo.pro_id = p.pro_id
		join product_stock ps on p.pro_id = ps.pro_id
		WHERE oo.oo_state = '생산완료'
		and not exists(
			select 1
            from product_release
            where product_release.oo_id = oo.oo_id
        )
	</select>

	<select id="getProductStock" resultMap="ProductReleaseVO">
		select p.pro_name,
		ps.ps_cnt, w.wh_name, w.wh_id
		from product p
		join product_stock ps on p.pro_id = ps.pro_id
		join warehouse w on ps.wh_id = w.wh_id
		where p.pro_id = #{pro_id}
	</select>
	<update id="acceptPR">
		update product_release set pr_state = '출고완료', pr_date=now() where pr_id =
		#{pr_id};
	</update>
	<update id="updatePS" parameterType="java.util.Map">
		update product_stock set ps_cnt=ps_cnt-#{pr_cnt}
		where pro_id = #{pro_id};
	</update>

	<!-- 자재 출고 대기 처리 -->
	<update id="waitingMR">
		UPDATE material_release
		SET mr_state = '출고대기'
		WHERE
		mr_id = #{mr_id}
	</update>
	<!-- 자재 출고 대기 처리 -->

	<!-- 완제품 출고 대기 처리 -->
	<update id="waitingPR">
		UPDATE product_release
		SET pr_state = '출고대기'
		WHERE pr_id = #{pr_id}
	</update>
	<!-- 완제품 출고 대기 처리 -->

</mapper>